---
- name: "Proxy config directory"
  tags:
    - cfg
  file:
    state: "directory"
    path : "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: root
    mode: "{{ item.mode | default('0755') }}"
  loop: 
    - { path: "{{ proxy.directory }}" }
    - { path: "{{ proxy.directory }}/cache", mode: "0777" }
    - { path: "{{ proxy.directory }}/ssl" }
    - { path: "{{ proxy.directory }}/vhosts" }
    - { path: "{{ proxy.directory }}/vhosts/extra" }
    - { path: "{{ proxy.directory }}/vhosts/secure" }
    - { path: "{{ proxy.directory }}/{{ vhosts_cfg_dir }}" }


- name: "Install python-passlib"
  tags:
    - pkg
    - pip
  pip:
    name: passlib
    state: latest


- name: "Proxy config"
  tags:
    - cfg
  template:
    dest: "{{ proxy.directory }}/vhosts/{{ item.dest }}"
    src: "{{ item.src }}"
    owner: root
    group: root
    mode: "0644"
  loop:
    - { src: "block.conf.j2",      dest: "extra/block.conf" }
    - { src: "localhost.conf.j2",  dest: "extra/localhost.conf" }
    - { src: "log-format.conf.j2", dest: "extra/log-format.conf" }
    - { src: "{{ proxy.config }}", dest: "vhost.conf" }
  loop_control:
    label: '{{ item.dest }}'
  notify: "Reload proxy container"


- name: "Secure access"
  htpasswd:
    path: "{{ proxy.directory }}/vhosts/secure/htpasswd"
    name: "{{ proxy.secure.username }}"
    password: "{{ proxy.secure.password }}"
    owner: root
    group: root
    mode: 0640
  when:
  - proxy.secure is defined
  - secure_proxy is defined
  - secure_proxy[type] is defined


- name: "QoS"
  include_tasks: "qos.yml"
  when: qos is defined


- name: "{{ domain }} ssl"
  tags:
    - cfg
    - ssl
  copy:
    dest: '{{ item.path }}'
    content: '{{ item.content }}'
    owner: root
    group: root
    mode: "0644"
  loop:
    - { path: "{{ proxy.directory }}/ssl/server.crt", content: '{{ ssl.cert }}' }
    - { path: "{{ proxy.directory }}/ssl/server.key", content: '{{ ssl.key }}' }
    - { path: "{{ proxy.directory }}/ssl/server-ca.crt", content: '{{ ssl.ca }}' }
  loop_control:
    label: '{{ item.path }}'
  notify: "Reload proxy container"


- name: "Proxy container"
  tags:
    - container
  docker_container:
    name: "{{ proxy_container.name }}"
    image: "{{ proxy.image }}"
    restart_policy: unless-stopped
    log_driver: "{{ docker.logging.driver }}"
    log_options: "{{ docker.logging.options }}"
    network_mode: "{{ docker.network.mode }}"
    networks:
      - name: "{{ docker.network.name }}"
    networks_cli_compatible: yes
    ports:
      - "{{ proxy_container.port.http }}:{{ proxy.port.http }}"
      - "{{ proxy_container.port.https }}:{{ proxy.port.https }}"
    volumes:
      - "{{ proxy.directory }}/vhosts:/vhosts:rw"
      - "{{ proxy.directory }}/ssl:/certs:rw"
      - "{{ proxy.directory }}/www:/app:rw"
      - "{{ proxy.directory }}/cache:/var/cache/apache2/mod_cache_disk:rw"
  

- name: "Telegraf"
  include_tasks: "telegraf.yml"


- name: "Services"
  include_tasks: "services.yml"
