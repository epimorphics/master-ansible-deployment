---
- name: "Influxdb volume"
  tags:
    - cfg
    - influxdb
  file:
    path: "{{ influxdb.directory }}/{{ item.path }}"
    state: directory
    owner: "{{ default_user }}"
    group: root
    mode: "{{ item.mode }}"
  with_items:
    - { path: "config", mode: "0775" }
    - { path: "data",   mode: "0700" }
  notify: "Influxdb container restart"


- name: "Record Influxdb configuration file"
  tags:
    - container
    - influxdb
  stat:
    path: "{{ influxdb.directory }}/config/influx_configs"
  register: influx_configs


- meta: flush_handlers


- name: debug
  debug:
    var: influx_configs.stat.exists


- name: "Influxdb setup container"
  tags:
    - container
    - influxdb
  docker_container:
    name: "{{ influxdb_container.name }}"
    image: "{{ influxdb.image }}:{{ influxdb.version }}"
    env:
      DOCKER_INFLUXDB_INIT_MODE: "{{ omit if influx_configs.stat.exists=='false' else 'setup' }}"
      DOCKER_INFLUXDB_INIT_USERNAME: "telegraf"
      DOCKER_INFLUXDB_INIT_PASSWORD: "{{ password.influxdb.telegraf }}"
      DOCKER_INFLUXDB_INIT_ORG: "{{ influxdb_org }}"
      DOCKER_INFLUXDB_INIT_BUCKET: "{{ influxdb_bucket }}"
      DOCKER_INFLUXDB_INIT_RETENTION: "4w"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "{{ password.influxdb.admin }}"
      INFLUXD_HTTP_BIND_ADDRESS: ":{{ influxdb_container.port }}"
    log_driver: "{{ docker.logging.driver }}"
    log_options: "{{ docker.logging.options }}"
    network_mode: "{{ docker.network.mode }}"
    networks:
      - name: "{{ docker.network.name }}"
    restart_policy: "unless-stopped"
    networks_cli_compatible: yes
    ports:
      - "{{ influxdb_container.port }}:{{ influxdb_container.port }}"
    volumes:
      - "{{ influxdb.directory }}/config:{{ influxdb.config }}"
      - "{{ influxdb.directory }}/data:{{ influxdb.data }}"
  when: influx_configs.stat.exists is defined
