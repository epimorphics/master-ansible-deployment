---
- name: "EC2 Launch Template"
  tags:
    - asg
    - ec2
  ec2_launch_template:
    region: "{{ region }}"
    name: "{{ instance }}-{{ env-}}-{{ item.type }}"
    key_name: "{{ key.name }}"
    network_interfaces:
      - associate_public_ip_address: "yes"
        device_index: 0
        delete_on_termination: "yes"
        groups: "{{ item.security_groups | default([]) | epimorphics.deployment.ec2_sgId(vpc_id) }}"
    ebs_optimized: "{{ item.ebs_optimized | default('no') }}"
    image_id: "{{ item.image_id | default(ec2_default_image) }}"
    iam_instance_profile: "{{ iam_role }}"
    instance_type: "{{ item.instance_type }}"
    block_device_mappings: "{{ item.volumes | default(omit) }}"
  loop: "{{ ec2_inst_lc }}"
  loop_control:
    label: "{{ instance }}-{{ env-}}-{{ item.type }}"
  register: launch_templates
  when: ec2_inst_lc is defined


# It would be prefereable to loop on launch_configurations here
# but the user data is not accessible.
- name: "EC2 Auto Scaling Groups"
  tags:
    - asg
  ec2_asg:
    name: "{{ instance }}-{{ env-}}-{{ item.type }}"
    launch_template:
      launch_template_name: "{{ instance }}-{{ env-}}-{{ item.type }}"
    min_size: 1
    desired_capacity: "{{ item.count }}"
    max_size: "{{ item.count }}"
    replace_all_instances: yes
    tags:
      - Ansible: "True"
      - Env: "{{ env }}"
      - Inst: "{{ instance }}"
      - Type: "{{ item.type }}"
    vpc_zone_identifier: "{{ subnet_ids }}"
  loop: "{{ ec2_inst_lc }}"
  loop_control:
    label: "{{ instance }}-{{ env-}}-{{ item.type }}"
  register: asg
  when: ec2_inst_lc is defined


- name: "Waiting for new hosts to start..."
  pause:
    seconds: 60
  when:
    - asg is defined
    - asg.changed
