---
- name: "Sensu DNS"
  tags:
    - dns
  include_role:
    name: dns


- name: "Sensu volume"
  tags:
    - cfg
  file:
    state: "directory"
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode:  "{{ item.mode  | default('0755') }}"
  with_items:
    - { path: "{{ sensu_backend.directory }}" }


- name: "Sensu container ({{ tag }})"
  tags:
    - container
  docker_container:
    command: "sensu-backend start"
    image: "{{ sensu_backend.image }}"
    name: "{{ sensu_container.name }}"
    env:
      SENSU_BACKEND_AGENT_PORT: "{{ sensu_container.port.agent }}"
      SENSU_BACKEND_CLUSTER_ADMIN_USERNAME: "{{ sensu.auth.user }}"
      SENSU_BACKEND_CLUSTER_ADMIN_PASSWORD: "{{ sensu.auth.password }}"
      SENSU_BACKEND_DASHBOARD_PORT: "{{ sensu_container.port.gui }}"
      SENSU_BACKEND_DEBUG: "true"
      SENSU_BACKEND_LOG_LEVEL: "error"
      SENSU_BACKEND_STATE_DIR: "{{ sensu_backend.state }}/sensu-backend"
      SENSU_BACKEND_ETCD_HEARTBEAT_INTERVAL: "1000"
      SENSU_BACKEND_ETCD_ELECTION_TIMEOUT: "5000"
    log_driver: "{{ docker.logging.driver }}"
    log_options: "{{ docker.logging.options }}"
    network_mode: "{{ docker.network.mode }}"
    networks:
      - name: "{{ docker.network.name }}"
    networks_cli_compatible: yes
    ports: "{{ sensu_backend.ports }}"
    restart_policy: "unless-stopped"
    volumes:
      - "{{ sensu_backend.directory }}:{{ sensu_backend.state }}:rw"
  register: sensu_instance


- name: "Sensu-Alertmanager container ({{ sensu_am.tag }})"
  tags:
    - container
    - sensu_am
  docker_container:
    image: "{{ sensu_am.image }}:{{ sensu_am.tag }}"
    name: "{{ sensu_am_container.name }}"
    log_driver: "{{ docker.logging.driver }}"
    log_options: "{{ docker.logging.options }}"
    network_mode: "{{ docker.network.mode }}"
    networks:
      - name: "{{ docker.network.name }}"
    networks_cli_compatible: yes
    restart_policy: "unless-stopped"
    env:
      DEBUG: "{{ sensu_am.debug | default(0) }}"


- name: "Sensu stats log rotation"
  tags:
    - cfg 
    - logrotate
  template:
    src: "logrotate.j2"
    dest: "/etc/logrotate.d/sensu"


- name: "Sensu api operational"
  tags:
    - container
  uri:
    url: "http://localhost:{{ sensu_container.port.api }}/health"
  register: health
  retries: 10
  delay: 5
  until: health.status == 200
  failed_when:
    - health.json is undefined
  when: not ansible_check_mode


- name: "Sensu remove backend docker instance"
  delegate_to: "{{ sensu_server }}"
  sensu.sensu_go.entity:
    auth: "{{ sensu.auth }}"
    namespace: "sensu-system"
    name: "{{ sensu_instance.container.Config.Hostname }}"
    state: "absent"


- name: "Remove sensu_system namespace"
  delegate_to: "{{ sensu_server }}"
  sensu.sensu_go.namespace:
    auth: "{{ sensu.auth }}"
    name: "sensu-system"
    state: "absent"
