server {
  listen 80 default_server;

  set $blocked_agent    "-";
  set $blocked_location "-";
  set $blocked_origin   "-";
  set $blocked_request  "-";

  # Load Balancer test.
  location = /ping {
    access_log off;
    return 200;
  }

  error_page 429 /error/429.txt;

  location /error/ {
    internal;
    root {{ nginx.config }}/;
  }

  access_log  /var/log/nginx/access.log info_json;
  # Forbid anything that gets this far.
  location / {
    set $blocked_request  "Host:$http_host";
    return 403;
  }
}


server {
  listen       80;
  server_name  localhost;
  access_log  /var/log/nginx/access.log info_json;

  proxy_set_header X-user-agent $http_user_agent;
  proxy_set_header X-request-uri $request_uri;

  proxy_set_header X-qos-agent  $agent;
  proxy_set_header X-qos-origin $origin;
  proxy_set_header X-qos-path   $path;
  proxy_set_header X-qos-location $location;

  proxy_set_header X-server-name $http_host;

  proxy_set_header X-Real-IP $remote_addr;

  proxy_set_header X-Country-Code $geoip2_country_code;
  proxy_set_header X-Remote-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Request-Id $request_id;
  proxy_set_header X-NginX-Proxy true;

  proxy_set_header Host $host;

# Metrics for telegraf
  location /status {
    deny {{ internal_subnet }}; # via loadbalancer
    access_log off;
    stub_status;
  }

# Useful debug.
# See also 81-https for headers/variables
# location /echo {
#   proxy_cache default;
#   add_header X-Cache-Status $upstream_cache_status;
#   proxy_pass http://echo:8080;
# }
}
