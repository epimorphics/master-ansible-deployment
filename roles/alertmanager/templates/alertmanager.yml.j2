global:
  resolve_timeout: 5m
route:
  group_by: ['...']
  group_wait: 10s
  group_interval: 5m
  repeat_interval: 1h
  receiver: '{{ alertmanager_routes.default }}'
  routes:
{% if alertmanager_routes.receivers is defined %}
{% for rs in alertmanager_routes.receivers %}
{% if rs.matchers is defined %}
  - receiver: {{ rs.name }}
    matchers:
{% for m in rs.matchers %}
    - {{ m }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
  - receiver: 'sns-slack-forwarder'
    matchers:
    - namespace = testing
  - receiver: 'email'
    matchers:
    - alertname = Watchdog
receivers:
{% if alertmanager_routes.receivers is defined %}
{% for rs in alertmanager_routes.receivers %}
  - name: '{{ rs.name }}'
    email_configs:
    - to: {{ rs.email }}
      from: noreply@{{ domain }}
      smarthost: {{ mailrelay_container.name }}:{{mailrelay.port }}
      require_tls: false
    slack_configs:
    - send_resolved: True
      api_url: '{{ rs.slack.webhook }}'
      channel: '{{ rs.slack.channel }}'
      username: '{{ rs.slack.username }}'
{%- raw %}
      color: '{{ template "epimorphics.color" . }}'
      title: '{{ template "epimorphics.icon" . }} {{ template "epimorphics.title" . }}'
      title_link: '{{ template "epimorphics.runbook" (index .Alerts 0).Annotations }}'
      actions:
      - type: button
        text: "Alertmanager :no_bell:"
        url: '{{ if eq .Status "firing" -}}{{ .ExternalURL }}/#/alerts?receiver={{ .Receiver }}{{else}}null{{end}}'
      - type: button
        text: '{{ template "epimorphics.generator" (index .Alerts 0).Annotations }}'
        url: '{{ (index .Alerts 0).GeneratorURL }}'
      - type: button
        text: "Runbook :bookmark_tabs:"
        url: '{{ template "epimorphics.runbook" (index .Alerts 0).Annotations }}'
      text: |-
        {{ range .Alerts }}{{ .Annotations.message }}{{ end }}
        {{- range .Alerts }}
        *Start:* {{ .StartsAt }}{{if .Annotations.occurrences}} ({{ .Annotations.occurrences }}}{{end}}
        {{ range .Labels.SortedPairs }}{{if and (ne .Name "alertname") (ne .Name "severity") }}- *{{ .Name }}:* {{ .Value }}
        {{ end -}}
        {{- end -}}
        {{- end }}
{% endraw %}
{% endfor %}
{% endif %}
  - name: 'email'
    email_configs:
    - to: {{ email }}
      from: noreply@{{ domain }}
      smarthost: {{ mailrelay_container.name }}:{{mailrelay.port }}
      require_tls: false
  - name: 'sns-slack-forwarder'
    webhook_configs:
    - send_resolved: True
      url: 'http://{{ sns_forwarder_container.name }}:{{ sns_forwarder_container.port }}/alert/{{ sns_slack }}'
  - name: 'null'
templates:
- /etc/alertmanager/slack.tmpl
